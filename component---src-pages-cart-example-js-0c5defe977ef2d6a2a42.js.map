{"version":3,"sources":["webpack:///./src/components/CartOverview.js","webpack:///./src/pages/cart_example.js"],"names":["buttonStyles","fontSize","textAlign","color","outline","padding","boxShadow","backgroundColor","borderRadius","letterSpacing","Cart","useState","loading","setLoading","useShoppingCart","formattedTotalPrice","redirectToCheckout","cartCount","clearCart","cartDetails","decrementItem","incrementItem","removeItem","cart","sku","cartEntry","push","Card","style","flex","display","width","flexDirection","justifyContent","maxWidth","alignItems","src","image","height","name","margin","Button","size","onClick","aria-label","Label","quantity","formattedValue","paddingBottom","paddingTop","disabled","Moltin","require","stripePromise","loadStripe","CartExample","location","setItems","setMeta","setCartId","useContext","CartContext","updateCartCount","a","localStorage","getItem","cartIdLocal","console","log","getCartItems","then","data","meta","useEffect","isBrowser","window","Layout","SEO","title","mode","stripe","successUrl","origin","cancelUrl","currency","allowedCountries","billingAddressCollection","CartOverview"],"mappings":"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","file":"component---src-pages-cart-example-js-0c5defe977ef2d6a2a42.js","sourcesContent":["import React, { useState } from 'react'\n\nimport { useShoppingCart } from 'use-shopping-cart'\nimport { Container, Card, Button, Label } from 'semantic-ui-react'\n\n\nconst buttonStyles = {\n  fontSize: '13px',\n  textAlign: 'center',\n  color: '#fff',\n  outline: 'none',\n  padding: '12px',\n  boxShadow: '2px 5px 10px rgba(0,0,0,.1)',\n  backgroundColor: '#4b00a1',\n  borderRadius: '6px',\n  letterSpacing: '1.5px',\n}\n\nconst Cart = () => {\n  const [loading, setLoading] = useState(false)\n  /* Gets the totalPrice and a method for redirecting to stripe */\n  const {\n    formattedTotalPrice,\n    redirectToCheckout,\n    cartCount,\n    clearCart,\n    cartDetails,\n    decrementItem,\n    incrementItem,\n    removeItem\n  \n  } = useShoppingCart()\n\n\n\n\n  const cart = []\n  // Note: Object.keys().map() takes 2x as long as a for-in loop\n  for (const sku in cartDetails) {\n    const cartEntry = cartDetails[sku]\n\n    // all of your basic product data still exists (i.e. name, image, price)\n    cart.push(\n      <Card style={{flex:1, display:'flex', width:'100%'}}>\n        <div>\n                <div style={{display:'flex', flex:1, flexDirection:'row', justifyContent:'space-around'}}>\n<div style={{display:'flex',flex:1, maxWidth:'20%', justifyContent:'flex-start', alignItems:'center'}}>\n        <img src={cartEntry.image} height={200} width={200} />\n        </div>\n        <div style={{display:'flex', flex:1, flexDirection:'column', justifyContent:'center', alignItems:'flex-start'}}>\n  {cartEntry.name}\n</div>\n\n        {/* name here */}\n        {/* formatted total price of that item */}\n        {/* What if we want to remove one of the item... or add one */}\n        <div style={{display:'flex', flex:1, margin:'0px 20px 0px 20px'}}>\n\n\n          <div style={{display:'flex',flex:1,  flexDirection:'row',justifyContent:'flex-end', }}>\n\n          <div style={{display:'flex', flexDirection:'column', justifyContent:'center', alignItems:'center'}}>\n        <Button\n        size=\"large\"\n          onClick={() => decrementItem(cartEntry.sku)}\n          aria-label={`Remove one ${cartEntry.name} from your cart`}\n        >\n          -\n        </Button>\n        </div>\n        <div style={{display:'flex', flexDirection:'column', justifyContent:'center', alignItems:'center'}}>\n        <Label style={{margin:'10px'}}>{cartEntry.quantity}</Label>\n        </div>\n        <div style={{display:'flex', flexDirection:'column', justifyContent:'center', alignItems:'center'}}>\n        <Button\n                size=\"large\"\n\n          onClick={() => incrementItem(cartEntry.sku)}\n          aria-label={`Add one ${cartEntry.name} to your cart`}\n        >\n          +\n        </Button>\n        </div>\n        </div>\n        {/* What if we don't want this product at all */}\n        <div style={{display:'flex', flexDirection:'column', justifyContent:'center', alignItems:'center'}}>\n        <Button\n                size=\"large\"\n\n        style={{margin:'20px'}}\n          onClick={() => removeItem(cartEntry.sku)}\n          aria-label={`Remove all ${cartEntry.name} from your cart`}\n        >\n          Remove\n        </Button>\n        </div>\n        <div style={{display:'flex', flex:1, flexDirection:'column', justifyContent:'center', alignItems:'center'}}>\n        <p>{cartEntry.formattedValue}</p>\n\n        </div>\n\n        </div>\n\n        </div>\n        </div>\n      </Card>\n    )\n  }\n\n\n\n  return (\n    <div style={{paddingBottom:'50px'}}>\n      <div>\n      {cart}\n      </div>  \n      <div style={{flex:1, display:'flex', flexDirection:'row', paddingTop:20, justifyContent:'flex-end',}}>\n      <div style={{flexDirection:'column', flex:1, display:'flex',   maxWidth:'25%'}}>\n        <div>\n      <div style={{display:'flex',  textAlign:'right', margin:0, flexDirection:'row'}}><h3>Quantity: {cartCount}</h3></div>\n      </div>\n      <div>\n      <div style={{display:'flex', margin:0, flexDirection:'row'}}><h2>Total: {formattedTotalPrice}</h2></div>\n      </div>\n      </div>\n      <button\n        style={buttonStyles}\n        disabled={loading}\n        onClick={() => {\n          setLoading(true)\n          redirectToCheckout()\n        }}\n      >\n        {loading ? 'Loading...' : 'Checkout'}\n      </button>\n      <button style={buttonStyles} onClick={clearCart}>\n        Clear cart\n      </button>\n      </div>\n      {/* Redirects the user to Stripe */}\n    \n    </div>\n  )\n}\n\nexport default Cart\n\n","import React, { useState, useContext, useEffect, componentDidMount } from 'react'\nimport CartItemList from '../components/CartItemList'\nimport CartSummary from '../components/CartSummary'\nimport CartContext from '../components/Context/CartContext'\nconst Moltin = require('../../lib/moltin')\n\nimport Layout from '../components/Layout'\nimport SEO from '../components/SEO'\n\nimport Skus from '../components/Products/Skus'\nimport CartOverview from '../components/CartOverview'\n\nimport { loadStripe } from '@stripe/stripe-js'\nimport { CartProvider } from 'use-shopping-cart'\n\nconst stripePromise = loadStripe(\"pk_test_51IGhToG3l6YaloTgAakGvMYVjrveEMs7oFJF7akytn6gyne2Lq0GDYmAYxh0iqFMPIclDMwQ1PtGqhq26WvwHYGw001BbrEVn0\")\n\nconst CartExample = ({ location }) => {\n\n    const [loading, setLoading] = useState(true)\n    const [items, setItems] = useState([])\n    const [completed, setCompleted] = useState(false)\n    const [meta, setMeta] = useState({})\n    const [cartId, setCartId] = useState({})\n    const { updateCartCount } = useContext(CartContext)\n\n\n\n\n\n    async function getCartItems() {\n        const cartIdLocal = await localStorage.getItem('mcart')\n        console.log(cartIdLocal)\n        await Moltin.getCartItems(cartIdLocal).then(({ data, meta }) => {\n            console.log(data)\n            setItems(data)\n            setCartId(cartIdLocal)\n            setMeta(meta)\n            setLoading(false)\n        })\n    }\n\n    useEffect(() => {\n        getCartItems()\n    }, [])\n\n    const handleCheckout = async data => {\n        const cartId = await localStorage.getItem('mcart')\n        const customerId = localStorage.getItem('mcustomer')\n\n        const {\n            id: token,\n            email,\n            card: {\n                name,\n                address_line1: line_1,\n                address_city: city,\n                address_country: country,\n                address_state: county,\n                address_zip: postcode,\n            },\n        } = data\n\n        const customer = customerId || { name, email }\n\n        const address = {\n            first_name: name.split(' ')[0],\n            last_name: name.split(' ')[1] || '',\n            line_1,\n            city,\n            county: county || '',\n            country,\n            postcode,\n        }\n\n        try {\n            const {\n                data: { id },\n            } = await Moltin.checkoutCart(cartId, customer, address)\n            await Moltin.payForOrder(id, token, email)\n            setCompleted(true)\n            updateCartCount(0, cartId)\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n    const handleRemoveFromCart = itemId => {\n        Moltin.removeFromCart(itemId, cartId).then(({ data, meta }) => {\n            const total = data.reduce((a, c) => a + c.quantity, 0)\n            updateCartCount(total, cartId)\n            setItems(data)\n            setMeta(meta)\n        })\n    }\n\n    const rest = { completed, items, loading, cartId }\n\n\n    const isBrowser = () => typeof window !== \"undefined\"\n\n\n    return (<Layout location={location}>\n        <SEO title=\"Cart Example\" />\n        <h1 style={{ paddingTop: '60px' }}>Cart Overview</h1>\n        <CartProvider\n            mode=\"client-only\"\n            stripe={stripePromise}\n            successUrl={isBrowser && `${window.location.origin}/page-2/`}\n            cancelUrl={isBrowser && `${window.location.origin}/`}\n            currency=\"USD\"\n            allowedCountries={['US', 'GB', 'CA']}\n            billingAddressCollection={true}\n        >\n            <CartOverview />\n        </CartProvider>\n    </Layout>\n    )\n}\n\nexport default CartExample\n"],"sourceRoot":""}