{"version":3,"sources":["webpack:///./src/images/readytoupgradeinfographic.png","webpack:///./src/images/selldeviceitseasy.png","webpack:///./src/images/selldevice.png","webpack:///./src/pages/selldevice.js"],"names":["module","exports","Moltin","require","Cart","location","useState","setLoading","setItems","setMeta","setCartId","useContext","CartContext","updateCartCount","a","localStorage","getItem","cartIdLocal","getCartItems","then","data","meta","useEffect","style","className","src","selldevicebanner","readytoupgradeinfographic","selldeviceitseasy","title"],"mappings":"iFAAAA,EAAOC,QAAU,IAA0B,yE,qBCA3CD,EAAOC,QAAU,IAA0B,iE,4CCA3CD,EAAOC,QAAU,IAA0B,0D,0QCYrCC,EAASC,EAAQ,QA+FRC,UA7FF,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAAc,EACGC,oBAAS,GAAvBC,GADW,aAEDD,mBAAS,IAArBE,GAFa,aAGOF,oBAAS,GAHhB,aAIHA,mBAAS,KAApBG,GAJc,aAKCH,mBAAS,IAAtBI,GALY,WAMDC,qBAAWC,KAA9BC,gBANoB,4CAQ3B,4BAAAC,EAAA,sEAC4BC,aAAaC,QAAQ,SADjD,cACQC,EADR,gBAEQf,EAAOgB,aAAaD,GAAaE,MAAK,YAAmB,IAAjBC,EAAgB,EAAhBA,KAAMC,EAAU,EAAVA,KAClDb,EAASY,GACTV,EAAUO,GACVR,EAAQY,GACRd,GAAW,MANf,4CAR2B,sBAkB3Be,qBAAU,YAlBiB,mCAmBzBJ,KACC,IAsDH,OACE,kBAAC,IAAD,CAAQb,SAAUA,GACV,yBAAKkB,MAAO,IACxB,yBAAKC,UAAU,oBACb,kBAAC,IAAD,CAAOC,IAAKC,OAEd,gCAAQ,kFAGR,yBAAKF,UAAU,kBACf,kBAAC,IAAD,CAAOC,IAAKE,MACZ,kBAAC,IAAD,CAAOF,IAAKG,OAEN,kBAAC,IAAD,CAAKC,MAAM","file":"component---src-pages-selldevice-js-6fc749372dd52a6e94c8.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/readytoupgradeinfographic-94058bf6f274aa768554d3fb1efc26d6.png\";","module.exports = __webpack_public_path__ + \"static/selldeviceitseasy-360034c0c83c13f8aff93f7d3e189531.png\";","module.exports = __webpack_public_path__ + \"static/selldevice-c6d4edc17f6c7e09a7b2795dca4da134.png\";","/* eslint-disable camelcase */\nimport React, {useState, useContext, useEffect} from 'react'\nimport SEO from '../components/SEO'\nimport CartItemList from '../components/CartItemList'\nimport CartSummary from '../components/CartSummary'\nimport CartContext from '../components/Context/CartContext'\nimport Layout from '../components/Layout'\nimport '../css_overrides/selldevice.css'\nimport { Image } from 'semantic-ui-react'\nimport selldevicebanner from '../images/selldevice.png'\nimport readytoupgradeinfographic from '../images/readytoupgradeinfographic.png'\nimport selldeviceitseasy from '../images/selldeviceitseasy.png'\nconst Moltin = require('../../lib/moltin')\n\nconst Cart = ({location}) => {\n  const [loading, setLoading] = useState(true)\n  const [items, setItems] = useState([])\n  const [completed, setCompleted] = useState(false)\n  const [meta, setMeta] = useState({})\n  const [cartId, setCartId] = useState({})\n  const {updateCartCount} = useContext(CartContext)\n\n  async function getCartItems() {\n    const cartIdLocal = await localStorage.getItem('mcart')\n    await Moltin.getCartItems(cartIdLocal).then(({data, meta}) => {\n      setItems(data)\n      setCartId(cartIdLocal)\n      setMeta(meta)\n      setLoading(false)\n    })\n  }\n\n  useEffect(() => {\n    getCartItems()\n  }, [])\n\n  const handleCheckout = async data => {\n    const cartId = await localStorage.getItem('mcart')\n    const customerId = localStorage.getItem('mcustomer')\n\n    const {\n      id: token,\n      email,\n      card: {\n        name,\n        address_line1: line_1,\n        address_city: city,\n        address_country: country,\n        address_state: county,\n        address_zip: postcode,\n      },\n    } = data\n\n    const customer = customerId || {name, email}\n\n    const address = {\n      first_name: name.split(' ')[0],\n      last_name: name.split(' ')[1] || '',\n      line_1,\n      city,\n      county: county || '',\n      country,\n      postcode,\n    }\n\n    try {\n      const {\n        data: {id},\n      } = await Moltin.checkoutCart(cartId, customer, address)\n      await Moltin.payForOrder(id, token, email)\n      setCompleted(true)\n      updateCartCount(0, cartId)\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  const handleRemoveFromCart = itemId => {\n    Moltin.removeFromCart(itemId, cartId).then(({data, meta}) => {\n      const total = data.reduce((a, c) => a + c.quantity, 0)\n      updateCartCount(total, cartId)\n      setItems(data)\n      setMeta(meta)\n    })\n  }\n\n  const rest = {completed, items, loading, cartId}\n\n  return (\n    <Layout location={location}>\n            <div style={{}}>\n<div className=\"selldevicebanner\">\n  <Image src={selldevicebanner} />\n</div>\n<center><h2>\nReady to Upgrade? Sell your old phones or Tablets\n</h2></center>\n<div className=\"readytoupgrade\">\n<Image src={readytoupgradeinfographic} />\n<Image src={selldeviceitseasy} />\n</div>\n      <SEO title=\"Cart\" />\n      </div>\n    </Layout>\n  )\n}\n\nexport default Cart\n"],"sourceRoot":""}