{"version":3,"sources":["webpack:///./src/components/Hooks/useForm.js","webpack:///./src/pages/register.js"],"names":["useForm","callback","validate","useState","values","setValues","errors","setErrors","isSubmitting","setIsSubmitting","useEffect","Object","keys","length","handleChange","event","persist","target","name","value","handleSubmit","preventDefault","Register","location","loading","setLoading","apiError","setApiError","updateToken","useContext","AuthContext","firebase","auth","createUserWithEmailAndPassword","email","password","then","res","console","log","localStorage","setItem","navigate","user","updateProfile","displayName","catch","error","style","padding","title","as","onSubmit","Array","isArray","header","content","map","e","detail","key","status","handleErrors","Field","htmlFor","id","fluid","autoFocus","onChange","color","type","test"],"mappings":"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","file":"component---src-pages-register-js-664d945e6a80d200c394.js","sourcesContent":["// Credit to https://upmostly.com/tutorials/using-custom-react-hooks-simplify-forms/\n\nimport {useState, useEffect} from 'react'\n\nconst useForm = (callback, validate) => {\n  const [values, setValues] = useState({})\n  const [errors, setErrors] = useState({})\n  const [isSubmitting, setIsSubmitting] = useState(false)\n\n  useEffect(() => {\n    if (Object.keys(errors).length === 0 && isSubmitting) {\n      callback()\n    }\n  }, [errors])\n\n  const handleSubmit = event => {\n    if (event) event.preventDefault()\n    setIsSubmitting(true)\n    setErrors(validate(values))\n  }\n\n  const handleChange = event => {\n    event.persist()\n    setValues(values => ({\n      ...values,\n      [event.target.name]: event.target.value,\n    }))\n  }\n\n  return {\n    handleChange,\n    handleSubmit,\n    values,\n    errors,\n  }\n}\n\nexport default useForm\n","/* eslint-disable jsx-a11y/label-has-associated-control */\n/* eslint-disable no-use-before-define */\n\nimport React, {useState, useContext} from 'react'\nimport {navigate} from 'gatsby'\nimport {Header, Form, Input, Button, Segment, Message} from 'semantic-ui-react'\nimport SEO from '../components/SEO'\nimport AuthContext from '../components/Context/AuthContext'\nimport {register} from '../../lib/moltin'\nimport Layout from '../components/Layout'\nimport useForm from '../components/Hooks/useForm'\nimport firebase from \"gatsby-plugin-firebase\"\n\n\nconst Register = ({location}) => {\n  const [loading, setLoading] = useState(false)\n  const [apiError, setApiError] = useState([])\n  const {updateToken} = useContext(AuthContext)\n  const [email, setEmail] = useState('')\n  const [name, setName] = useState('')\n  const [password, setPassword] = useState('')\n  const [uid, setUID] = useState('')\n  const [token, setToken] = useState('')\n\n  const formRegister = () => {\n    setLoading(true)\n\n\n    firebase\n         .auth()\n         .createUserWithEmailAndPassword(values.email, values.password)\n         .then((res) => {\n           console.log(res['user']['refreshToken']);\n           localStorage.setItem('customerToken', res['user']['refreshToken'])\n           localStorage.setItem('mcustomer', res['user']['uid'])   \n           updateToken()\n           navigate('/myaccount/')\n           return res.user.updateProfile({displayName: values.name})\n         })\n         .catch((error) => {\n            console.log(error)\n            console.log(error)\n            setLoading(false)\n            setApiError(error.errors || error)\n    \n         });\n\n    \n  \n  }\n\n  const {values, handleChange, handleSubmit, errors} = useForm(\n    formRegister,\n    validate,\n  )\n\n  const handleErrors = errors => {\n    if (!Array.isArray(errors) && !errors.length > 0) {\n      return (\n        <Message error header=\"Sorry\" content=\"Cannot register at this time.\" />\n      )\n    }\n    return errors.map(e => (\n      <Message error header={e.title} content={e.detail} key={e.status} />\n    ))\n  }\n\n  return (\n    <Layout location={location}>\n            <div style={{padding:'100px'}}>\n\n      <SEO title=\"Register\" />\n      <Header as=\"h1\">Create an account</Header>\n      <Form onSubmit={handleSubmit} loading={loading} error={!!errors}>\n        {apiError.length !== 0 ? handleErrors(errors) : null}\n        <Segment>\n          <Form.Field>\n            <label htmlFor=\"name\">Name</label>\n            <Input\n              id=\"name\"\n              fluid\n              name=\"name\"\n              autoFocus\n              onChange={handleChange}\n              value={values.name || ''}\n            />\n          </Form.Field>\n          {errors.name && <p style={{color: 'red'}}>{errors.name}</p>}\n\n          <Form.Field>\n            <label htmlFor=\"email\">Email</label>\n            <Input\n              id=\"email\"\n              fluid\n              name=\"email\"\n              type=\"email\"\n              onChange={handleChange}\n              value={values.email || ''}\n            />\n          </Form.Field>\n          {errors.email && <p style={{color: 'red'}}>{errors.email}</p>}\n          <Form.Field>\n            <label htmlFor=\"password\">Password</label>\n            <Input\n              id=\"password\"\n              fluid\n              name=\"password\"\n              type=\"password\"\n              onChange={handleChange}\n              value={values.password || ''}\n            />\n          </Form.Field>\n          {errors.password && <p style={{color: 'red'}}>{errors.password}</p>}\n          <Button type=\"submit\" color=\"#4b00a1\">\n            Register\n          </Button>\n        </Segment>\n      </Form>\n      </div>\n    </Layout>\n  )\n}\n\nexport default Register\n\nconst validate = values => {\n  const errors = {}\n  if (!values.email) {\n    errors.email = 'Email address is required'\n  } else if (!/\\S+@\\S+\\.\\S+/.test(values.email)) {\n    errors.email = 'Email address is invalid'\n  }\n  if (!values.password) {\n    errors.password = 'Password is required'\n  }\n  if (!values.name) {\n    errors.name = 'A name is required'\n  }\n  return errors\n}\n"],"sourceRoot":""}